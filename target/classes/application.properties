#--https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#--https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-sql.html
#--https://docs.spring.io/spring-data/rest/docs/current/reference/html/

#--https://spring.io/guides/gs/accessing-data-mysql/
#--none This is the default for MySQL, no change to the database structure.
#--update Hibernate changes the database according to the given Entity structures.
#--create Creates the database every time, but dont drop it when close.
#--create-drop Creates the database then drops it when the SessionFactory closes.

#--InnoDB and MYISAM , are storage engines for MySQL. These two differ on their locking implementation:
#--InnoDB locks the particular row in the table, and MyISAM locks the entire MySQL table.

server.port=8090

#--https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#common-application-properties
#spring.data.rest.basePath=/api/v1/taskmanager - only works with RepositoryRestController
#server.contextPath=/api/v1/taskmanager
#server.servlet-path=/api/v1/taskmanager
#server.error.path=
#spring.webservices.path=/api/v1/taskmanager

spring.datasource.url=jdbc:mysql://localhost:3306/db_root_taskmanager?allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root123

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE