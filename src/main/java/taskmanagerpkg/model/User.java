package taskmanagerpkg.model;

import taskmanagerpkg.constantmodel.RoleEnum;

import javax.persistence.*;
import java.util.Date;
import java.util.Objects;

/*TODO : business primary key must not be exposed to customer in any case.
 * Add new autogenerated primary-key (make it String-varchar as user_name+constant_basedOnSomeParam
 * While at consumer end treat user_name as primary key.*/
/*
1. Equals and Hashcode
https://www.intigua.com/blog/good-and-bad-equals-and-hashcode
2. Comparable
like hashcode() req for hashmap, comparable req for Treemap
 */
@Entity
public class User implements Comparable<User>{

    @Id
    private String user_id;
    @Column
    private String user_name;
    @Column
    private String user_password;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(nullable = false, updatable = false)
    private Date user_createdOn;
    @Enumerated(EnumType.STRING)
    @Column(length = 20)
    //todo : improve later by http://www.gabiaxel.com/2011/01/better-enum-mapping-with-hibernate.html
    private RoleEnum user_role;
    //role, processes

    //use transient to ignore properties mapping with columns
    @Transient
    private final String constIdAppend = "2018v1";

    public User() {
      //no-arg constructor for jpa
    }
    public User(String name, String password, RoleEnum role, Date user_createdOn) {
        this.user_id = name+constIdAppend;
        this.user_name = name;
        this.user_password = password;
        this.user_role = role;
        this.user_createdOn = user_createdOn;
    }

    //in absence of getter & setter Column doesnt get created; exception thrown
    public String getUser_name() {
        return user_name;
    }

    public void setUser_name(String name) {
        this.user_name = name;
    }

    public String getUser_id() {
        return user_id;
    }

    private void setUser_id() {
        user_id = getUser_name()+constIdAppend;
    }

    public void setUser_password(String password) {
        this.user_password = password;
    }

    private String getUser_password() {
        return user_password;
    }

    public Date getUser_createdOn() {
        return user_createdOn;
    }

    public void setUser_createdOn(Date createdOn) {
        this.user_createdOn = createdOn;
    }

    public RoleEnum getUser_role() {
        return user_role;
    }

    public void setUser_role(RoleEnum role) {
        this.user_role = role;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        User user = (User) o;
        return Objects.equals(getUser_name(), user.getUser_name());
    }

    @Override
    public int hashCode() {

        return getUser_name().hashCode()+ 2018;
    }

    @Override
    public String toString() {
        return this.getUser_name();
    }

    @Override
    public int compareTo(User o){
        return this.user_id.compareTo(o.user_id);
    }

}
